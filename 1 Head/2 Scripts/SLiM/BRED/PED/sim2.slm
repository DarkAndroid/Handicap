initialize() {
	initializeMutationRate(1e-07);
	initializeMutationType("m1", 0.5, "f", -0.000100);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 999);
	initializeRecombinationRate(1e-8);
}1 {	sim.addSubpop("p1", 1000);
}100 late() { sim.outputFull("sim2/sim2_100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
200 late() { sim.outputFull("sim2/sim2_200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
300 late() { sim.outputFull("sim2/sim2_300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
400 late() { sim.outputFull("sim2/sim2_400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
500 late() { sim.outputFull("sim2/sim2_500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
600 late() { sim.outputFull("sim2/sim2_600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
700 late() { sim.outputFull("sim2/sim2_700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
800 late() { sim.outputFull("sim2/sim2_800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
900 late() { sim.outputFull("sim2/sim2_900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1000 late() { sim.outputFull("sim2/sim2_1000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1100 late() { sim.outputFull("sim2/sim2_1100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1200 late() { sim.outputFull("sim2/sim2_1200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1300 late() { sim.outputFull("sim2/sim2_1300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1400 late() { sim.outputFull("sim2/sim2_1400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1500 late() { sim.outputFull("sim2/sim2_1500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1600 late() { sim.outputFull("sim2/sim2_1600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1700 late() { sim.outputFull("sim2/sim2_1700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1800 late() { sim.outputFull("sim2/sim2_1800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
1900 late() { sim.outputFull("sim2/sim2_1900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "1900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2000 late() { sim.outputFull("sim2/sim2_2000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2100 late() { sim.outputFull("sim2/sim2_2100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2200 late() { sim.outputFull("sim2/sim2_2200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2300 late() { sim.outputFull("sim2/sim2_2300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2400 late() { sim.outputFull("sim2/sim2_2400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2500 late() { sim.outputFull("sim2/sim2_2500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2600 late() { sim.outputFull("sim2/sim2_2600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2700 late() { sim.outputFull("sim2/sim2_2700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2800 late() { sim.outputFull("sim2/sim2_2800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
2900 late() { sim.outputFull("sim2/sim2_2900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "2900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3000 late() { sim.outputFull("sim2/sim2_3000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3100 late() { sim.outputFull("sim2/sim2_3100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3200 late() { sim.outputFull("sim2/sim2_3200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3300 late() { sim.outputFull("sim2/sim2_3300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3400 late() { sim.outputFull("sim2/sim2_3400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3500 late() { sim.outputFull("sim2/sim2_3500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3600 late() { sim.outputFull("sim2/sim2_3600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3700 late() { sim.outputFull("sim2/sim2_3700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3800 late() { sim.outputFull("sim2/sim2_3800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
3900 late() { sim.outputFull("sim2/sim2_3900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "3900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4000 late() { sim.outputFull("sim2/sim2_4000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4100 late() { sim.outputFull("sim2/sim2_4100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4200 late() { sim.outputFull("sim2/sim2_4200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4300 late() { sim.outputFull("sim2/sim2_4300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4400 late() { sim.outputFull("sim2/sim2_4400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4500 late() { sim.outputFull("sim2/sim2_4500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4600 late() { sim.outputFull("sim2/sim2_4600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4700 late() { sim.outputFull("sim2/sim2_4700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4800 late() { sim.outputFull("sim2/sim2_4800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
4900 late() { sim.outputFull("sim2/sim2_4900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "4900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5000 late() { sim.outputFull("sim2/sim2_5000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5100 late() { sim.outputFull("sim2/sim2_5100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5200 late() { sim.outputFull("sim2/sim2_5200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5300 late() { sim.outputFull("sim2/sim2_5300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5400 late() { sim.outputFull("sim2/sim2_5400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5500 late() { sim.outputFull("sim2/sim2_5500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5600 late() { sim.outputFull("sim2/sim2_5600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5700 late() { sim.outputFull("sim2/sim2_5700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5800 late() { sim.outputFull("sim2/sim2_5800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
5900 late() { sim.outputFull("sim2/sim2_5900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "5900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6000 late() { sim.outputFull("sim2/sim2_6000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6100 late() { sim.outputFull("sim2/sim2_6100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6200 late() { sim.outputFull("sim2/sim2_6200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6300 late() { sim.outputFull("sim2/sim2_6300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6400 late() { sim.outputFull("sim2/sim2_6400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6500 late() { sim.outputFull("sim2/sim2_6500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6600 late() { sim.outputFull("sim2/sim2_6600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6700 late() { sim.outputFull("sim2/sim2_6700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6800 late() { sim.outputFull("sim2/sim2_6800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
6900 late() { sim.outputFull("sim2/sim2_6900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "6900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7000 late() { sim.outputFull("sim2/sim2_7000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7100 late() { sim.outputFull("sim2/sim2_7100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7200 late() { sim.outputFull("sim2/sim2_7200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7300 late() { sim.outputFull("sim2/sim2_7300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7400 late() { sim.outputFull("sim2/sim2_7400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7500 late() { sim.outputFull("sim2/sim2_7500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7600 late() { sim.outputFull("sim2/sim2_7600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7700 late() { sim.outputFull("sim2/sim2_7700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7800 late() { sim.outputFull("sim2/sim2_7800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
7900 late() { sim.outputFull("sim2/sim2_7900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "7900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8000 late() { sim.outputFull("sim2/sim2_8000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8100 late() { sim.outputFull("sim2/sim2_8100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8200 late() { sim.outputFull("sim2/sim2_8200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8300 late() { sim.outputFull("sim2/sim2_8300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8400 late() { sim.outputFull("sim2/sim2_8400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8500 late() { sim.outputFull("sim2/sim2_8500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8600 late() { sim.outputFull("sim2/sim2_8600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8700 late() { sim.outputFull("sim2/sim2_8700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8800 late() { sim.outputFull("sim2/sim2_8800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
8900 late() { sim.outputFull("sim2/sim2_8900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "8900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9000 late() { sim.outputFull("sim2/sim2_9000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9100 late() { sim.outputFull("sim2/sim2_9100.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9100 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9200 late() { sim.outputFull("sim2/sim2_9200.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9200 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9300 late() { sim.outputFull("sim2/sim2_9300.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9300 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9400 late() { sim.outputFull("sim2/sim2_9400.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9400 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9500 late() { sim.outputFull("sim2/sim2_9500.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9500 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9600 late() { sim.outputFull("sim2/sim2_9600.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9600 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9700 late() { sim.outputFull("sim2/sim2_9700.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9700 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9800 late() { sim.outputFull("sim2/sim2_9800.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9800 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
9900 late() { sim.outputFull("sim2/sim2_9900.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "9900 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
10000 late() { sim.outputFull("sim2/sim2_10000.out");
subpop = sim.subpopulations[sim.subpopulations.id == 1];
s = subpop.individualCount;
inds = subpop.individuals;
for (i in inds){
    writeFile("sim2.out", "10000 " + i.pedigreeID +"   " + i.pedigreeParentIDs, append=T);
    writeFile("simGP%s.out", " " +i.pedigreeGrandparentIDs, append=T);
}
}
